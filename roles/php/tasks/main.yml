---

- name: get current version
  command: /usr/local/bin/php -v
  register: result
  ignore_errors: True
  changed_when: False

- name: install dependencies and packages
  apt: pkg={{ item }} state=installed
  with_items:
    - libbz2-dev
    - libcurl4-openssl-dev
    - libxml2-dev
    - libjpeg-dev
    - libpng-dev
    - libtiff-dev
    - libmcrypt-dev
    - libicu-dev
    - libbison-dev
    - bison
    - re2c
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: download
  get_url: url={{ download.php.url }} dest=/tmp/{{ download.php.url | basename }}
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: extract
  unarchive: src=/tmp/{{ download.php.url | basename }} dest=/tmp copy=no
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: configure
  command: ./configure --enable-fpm --enable-zip --enable-sockets --with-pdo-mysql --with-mysqli --with-mysql --with-gettext --with-gd --enable-ftp --enable-exif --with-curl --with-bz2 --with-openssl --with-mcrypt --enable-mbstring --with-jpeg-dir --with-png-dir --with-zlib --enable-bcmath --enable-intl chdir=/tmp/php-{{ software.php.version }}
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: make
  command: make -j{{ ansible_processor_cores }} chdir=/tmp/php-{{ software.php.version }}
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: make install {{ software.php.version }}
  command: make install chdir=/tmp/php-{{ software.php.version }}
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version

- name: clean up
  command: rm -rf {{ item}}
  with_items:
    - /tmp/{{ download.php.url | basename }}
    - /tmp/php-{{ software.php.version }}
  when: result.rc != 0 or result.stdout.split()[1] != software.php.version
